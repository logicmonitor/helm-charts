name: Helm Lint and Test Charts

on: pull_request

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
          arguschanged=$(ct list-changed --config ct.yaml || "no change" | grep argus)
          if [[ -n "$arguschanged" ]]; then
            echo "::set-output name=arguschanged::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install) - except argus
        run: ct install --config ct.yaml --excluded-charts argus,lmotel,releasemanager

      - name: Run chart-testing (install) - only argus
        if: steps.list-changed.outputs.arguschanged == 'true'
        run: |
          kubectl apply -f charts/collectorset-controller/crds/collectorset.yaml
          ct install --config ct.yaml --charts charts/argus
          kubectl delete -f charts/collectorset-controller/crds/collectorset.yaml
      - name: setup yq
        run: sudo snap install yq

      - name: checkout gh-pages
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: gh-pages
          ref: gh-pages
      - name: generate readme table
        run: |
          yq gh-pages/index.yaml -o json > tmp.json
          touch out.md
          printf "# VERSION SKEW MATRIX >> out.md
          printf "\n## Argus Releases\n" >> out.md
          echo "| name | version | appVersion | dependencies |" >> out.md
          printf "| :---- | :---- | :---- | :---- |" >> out.md
          cat tmp.json | jq -jr '(.entries."argus"[] | "| ", .name, " | ", .version, " | ", .appVersion // empty, " | " as $out | " | <ul> ", (.dependencies[]? | "<li>", .name, "@" ,.version, " " , .repository,  "</li>" ), " </ul> | \n")' >> out.md
          printf "\n## Collectorset Controller Releases\n" >> out.md
          echo "| name | version | appVersion | dependencies |" >> out.md
          echo "| :---- | :---- | :---- | :---- |" >> out.md
          cat tmp.json | jq -jr '(.entries."collectorset-controller"[] | "| ", .name, " | ", .version, " | ", .appVersion // empty, " | " as $out | " | <ul> ", (.dependencies[]? | "<li>", .name, "@" ,.version, " " , .repository,  "</li>" ), " </ul> | \n")' >> out.md
          printf "\n## LM Container Releases\n" >> out.md
          echo "| name | version | appVersion | dependencies |" >> out.md
          echo "| :---- | :---- | :---- | :---- |" >> out.md
          cat tmp.json | jq -jr '(.entries."lm-container"[] | "| ", .name, " | ", .version, " | ", .appVersion // empty, " | " as $out | " | <ul> ", (.dependencies[]? | "<li>", .name, "@" ,.version, " " , .repository,  "</li>" ), " </ul> | \n")' >> out.md
          cp out.md gh-pages/VERSION-SKEW-MATRIX.md
          cd gh-pages
      - name: auto commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: gh-pages
          repository: gh-pages
          commit_message: "docs(readme): update version skew"
          file_pattern: "VERSION-SKEW-MATRIX.md"
