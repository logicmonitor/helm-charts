apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "releasemanager.fullname" . }}
  labels:
    app: {{ template "releasemanager.name" . }}
    chart: {{ template "releasemanager.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "releasemanager.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "releasemanager.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: releasemanager
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 15
          args:
          - export
          - --config
          - /etc/releasemanager/config.yaml
          - --daemon
          - {{ required "A valid .Values.backend.type entry required" .Values.backend.type }}
          - --release-name
          - {{ tpl (.Release.Name) .}}
          env:
{{- if and .Values.s3 (eq .Values.backend.type "s3") }}
{{- if and .Values.s3 .Values.s3.accessKeyID }}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: releasemanager
                key: accessKeyID
{{- end }}
{{- if and .Values.s3 .Values.s3.secretAccessKey }}
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: releasemanager
                key: secretAccessKey
{{- end }}
{{- if and .Values.s3 .Values.s3.sessionToken }}
          - name: AWS_SESSION_TOKEN
            valueFrom:
              secretKeyRef:
                name: releasemanager
                key: sessionToken
{{- end }}
{{- end }}
          volumeMounts:
          - name: etc-releasemanager
            mountPath: "/etc/releasemanager"
            readOnly: true
      volumes:
      - name: etc-releasemanager
        projected:
          sources:
          - configMap:
              name: releasemanager
              items:
                - key: config.yaml
                  path: config.yaml
