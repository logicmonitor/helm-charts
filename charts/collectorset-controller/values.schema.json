{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "http://example.com/example.json",
  "type": "object",
  "title": "Collectorset Controller Helm chart Values Schema",
  "description": "Collectorset Controller Helm chart Values Schema",
  "default": {},
  "examples": [
    {
      "accessID": "",
      "accessKey": "",
      "account": "",
      "log": {
        "level": "info"
      },
      "nameOverride": "",
      "fullnameOverride": "",
      "serviceAccount": {
        "create": true
      },
      "rbac": {
        "create": true
      },
      "image": {
        "repository": "logicmonitor/collectorset-controller",
        "pullPolicy": "",
        "tag": ""
      },
      "proxy": {
        "url": "",
        "user": "",
        "pass": ""
      },
      "nodeSelector": {},
      "affinity": {},
      "priorityClassName": "",
      "tolerations": [],
      "resources": {},
      "labels": {},
      "annotations": {},
      "ignoreSSL": false,
      "global": {
        "accessID": "",
        "accessKey": "",
        "account": "",
        "collectorsetServiceNameSuffix": "",
        "userDefinedSecret": "",
        "proxy": {
          "url": "",
          "user": "",
          "pass": ""
        },
        "image": {
          "pullPolicy": "Always"
        }
      }
    }
  ],
  "required": [
    "accessID",
    "accessKey",
    "account"
  ],
  "$comment": "tf:optional",
  "properties": {
    "enabled": {
      "$comment": "tf:optional",
      "$id": "#/properties/enabled",
      "description": "Defined for umbrella chart but unused here.",
      "type": "boolean",
      "default": true
    },
    "accessID": {
      "$comment": "tf:optional",
      "$id": "#/properties/accessID",
      "type": "string",
      "title": "The accessID schema",
      "description": "An explanation about the purpose of this instance.",
      "default": "",
      "examples": [
        ""
      ]
    },
    "accessKey": {
      "$comment": "tf:optional",
      "$id": "#/properties/accessKey",
      "type": "string",
      "title": "The accessKey schema",
      "description": "An explanation about the purpose of this instance.",
      "default": "",
      "examples": [
        ""
      ]
    },
    "account": {
      "$comment": "tf:optional",
      "$id": "#/properties/account",
      "type": "string",
      "title": "The account schema",
      "description": "An explanation about the purpose of this instance.",
      "default": "",
      "examples": [
        ""
      ]
    },
    "log": {
      "$id": "#/properties/log",
      "$comment": "tf:optional",
      "type": "object",
      "title": "The log schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {
          "level": "info"
        }
      ],
      "required": [
        "level"
      ],
      "properties": {
        "level": {
          "$comment": "tf:optional",
          "$id": "#/properties/log/properties/level",
          "type": "string",
          "title": "The level schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "info",
          "enum": [
            "info",
            "warn",
            "warning",
            "debug",
            "trace",
            "error",
            "fatal",
            "panic"
          ],
          "examples": [
            "info"
          ]
        }
      },
      "additionalProperties": false
    },
    "nameOverride": {
      "$comment": "tf:optional",
      "$id": "#/properties/nameOverride",
      "type": "string",
      "title": "The nameOverride schema",
      "description": "An explanation about the purpose of this instance.",
      "default": "",
      "examples": [
        ""
      ]
    },
    "fullnameOverride": {
      "$comment": "tf:optional",
      "$id": "#/properties/fullnameOverride",
      "type": "string",
      "title": "The fullnameOverride schema",
      "description": "An explanation about the purpose of this instance.",
      "default": "",
      "examples": [
        ""
      ]
    },
    "serviceAccount": {
      "$comment": "tf:optional",
      "$id": "#/properties/serviceAccount",
      "type": "object",
      "title": "The serviceAccount schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {
          "create": true
        }
      ],
      "required": [
        "create"
      ],
      "properties": {
        "create": {
          "$comment": "tf:optional",
          "$id": "#/properties/serviceAccount/properties/create",
          "type": "boolean",
          "title": "The create schema",
          "description": "An explanation about the purpose of this instance.",
          "default": false,
          "examples": [
            true
          ]
        }
      },
      "additionalProperties": false
    },
    "rbac": {
      "$comment": "tf:optional",
      "$id": "#/properties/rbac",
      "type": "object",
      "title": "The rbac schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {
          "create": true
        }
      ],
      "required": [
        "create"
      ],
      "properties": {
        "create": {
          "$comment": "tf:optional",
          "$id": "#/properties/rbac/properties/create",
          "type": "boolean",
          "title": "The create schema",
          "description": "An explanation about the purpose of this instance.",
          "default": false,
          "examples": [
            true
          ]
        }
      },
      "additionalProperties": false
    },
    "image": {
      "$comment": "tf:optional",
      "$id": "#/properties/image",
      "type": "object",
      "title": "The image schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {
          "registry": "382028353997.dkr.ecr.us-west-2.amazonaws.com",
          "repository": "logicmonitor/collectorset-controller",
          "pullPolicy": "",
          "tag": ""
        }
      ],
      "required": [
      ],
      "properties": {
        "registry": {
          "$comment": "tf:optional",
          "$id": "#/properties/image/properties/registry",
          "type": "string",
          "title": "The registry schema",
          "description": "Container Image Registry",
          "default": "",
          "minLength": 0,
          "examples": [
            "382028353997.dkr.ecr.us-west-2.amazonaws.com"
          ]
        },
        "repository": {
          "$comment": "tf:optional",
          "$id": "#/properties/image/properties/repository",
          "type": "string",
          "title": "The repository schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "",
          "examples": [
            "logicmonitor"
          ]
        },
        "name": {
          "$comment": "tf:optional",
          "$id": "#/properties/image/properties/name",
          "type": "string",
          "title": "The name schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "",
          "examples": [
            "collectorset-controller"
          ]
        },
        "pullPolicy": {
          "$comment": "tf:optional",
          "$id": "#/properties/image/properties/pullPolicy",
          "type": "string",
          "title": "The pullPolicy schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "Always",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never",
            ""
          ],
          "examples": [
            ""
          ]
        },
        "tag": {
          "$comment": "tf:optional",
          "$id": "#/properties/image/properties/tag",
          "type": "string",
          "title": "The tag schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "",
          "examples": [
            ""
          ]
        }
      },
      "additionalProperties": false
    },
    "proxy": {
      "$comment": "tf:optional",
      "$id": "#/properties/proxy",
      "type": "object",
      "title": "The proxy schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {
          "url": "",
          "user": "",
          "pass": ""
        }
      ],
      "required": [
      ],
      "properties": {
        "url": {
          "$comment": "tf:optional",
          "$id": "#/properties/proxy/properties/url",
          "type": "string",
          "title": "The url schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "",
          "examples": [
            ""
          ]
        },
        "user": {
          "$comment": "tf:optional",
          "$id": "#/properties/proxy/properties/user",
          "type": "string",
          "title": "The user schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "",
          "examples": [
            ""
          ]
        },
        "pass": {
          "$comment": "tf:optional",
          "$id": "#/properties/proxy/properties/pass",
          "type": "string",
          "title": "The pass schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "",
          "examples": [
            ""
          ]
        }
      },
      "additionalProperties": false
    },
    "nodeSelector": {
      "$comment": "tf:optional,yamlencode",
      "$id": "#/properties/nodeSelector",
      "type": "object",
      "title": "The nodeSelector schema",
      "default": {},
      "examples": [
        {}
      ],
      "required": [],
      "additionalProperties": {
        "type": "string"
      },
      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
    },
    "affinity": {
      "$comment": "tf:optional,yamlencode",
      "$id": "#/properties/affinity",
      "type": "object",
      "title": "The affinity schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {}
      ],
      "required": []
    },
    "priorityClassName": {
      "$comment": "tf:optional",
      "$id": "#/properties/priorityClassName",
      "type": "string",
      "title": "The priorityClassName schema",
      "description": "An explanation about the purpose of this instance.",
      "default": "",
      "examples": [
        ""
      ]
    },
    "tolerations": {
      "$comment": "tf:optional,yamlencode",
      "$id": "#/properties/tolerations",
      "type": "array",
      "title": "The tolerations schema",
      "description": "An explanation about the purpose of this instance.",
      "default": [],
      "examples": [
        []
      ],
      "additionalItems": true,
      "items": {
        "$id": "#/properties/tolerations/items",
        "$ref": "#/definitions/toleration"
      },
      "uniqueItems": true
    },
    "resources": {
      "$id": "#/properties/resources",
      "type": "object",
      "$comment": "tf:optional",
      "title": "The CSC resource limits schema",
      "description": "The CSC pod resource limits",
      "default": {},
      "examples": [
        {
          "limits": {
            "cpu": "1000m",
            "memory": "1Gi",
            "ephemeral-storage": "100Mi"
          },
          "requests": {
            "cpu": "1000m",
            "memory": "1Gi",
            "ephemeral-storage": "100Mi"
          }
        }
      ],
      "properties": {
        "limits": {
          "$id": "#/properties/resources/properties/limits",
          "$comment": "tf:optional,yamlencode",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "object"
        },
        "requests": {
          "$id": "#/properties/resources/properties/requests",
          "$comment": "tf:optional,yamlencode",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "object"
        }
      },
      "additionalProperties": false,
      "required": []
    },
    "labels": {
      "$comment": "tf:optional,yamlencode",
      "$id": "#/properties/labels",
      "type": "object",
      "title": "The labels schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {}
      ],
      "additionalProperties": {
        "type": "string"
      },
      "required": []
    },
    "annotations": {
      "$comment": "tf:optional,yamlencode",
      "$id": "#/properties/annotations",
      "type": "object",
      "title": "The annotations schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {}
      ],
      "additionalProperties": {
        "type": "string"
      },
      "required": []
    },
    "ignoreSSL": {
      "$comment": "tf:optional",
      "$id": "#/properties/ignoreSSL",
      "type": "boolean",
      "title": "The ignoreSSL schema",
      "description": "An explanation about the purpose of this instance.",
      "default": false,
      "examples": [
        false
      ]
    },
    "global": {
      "$comment": "tf:optional",
      "$id": "#/properties/global",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "imagePullSecrets": {
          "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
          "examples": [
            [
              {
                "name": "imagepullsecret1"
              }
            ]
          ],
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "type": "array"
        },
        "image": {
          "$id": "#/properties/image",
          "type": "object",
          "title": "The image schema",
          "description": "An explanation about the purpose of this instance.",
          "default": {},
          "examples": [
            {
              "pullPolicy": "Always"
            }
          ],
          "required": [],
          "properties": {
            "registry": {
              "$id": "#/properties/global/properties/image/properties/registry",
              "type": "string",
              "title": "The registry schema",
              "description": "Container Image Registry",
              "default": "",
              "minLength": 0,
              "examples": [
                "382028353997.dkr.ecr.us-west-2.amazonaws.com"
              ]
            },
            "repository": {
              "$comment": "tf:optional",
              "$id": "#/properties/global/properties/image/properties/repository",
              "type": "string",
              "title": "The repository schema",
              "description": "Container Image Repository.",
              "default": "",
              "minLength": 0,
              "examples": [
                "logicmonitor"
              ]
            },
            "pullPolicy": {
              "$id": "#/properties/global/properties/image/properties/pullpolicy",
              "type": "string",
              "title": "pullPolicy",
              "description": "Overrides the image tag whose default is the chart appVersion.",
              "default": "Always",
              "enum": [
                "Always",
                "IfNotPresent",
                "Never",
                ""
              ],
              "examples": [
                "Always"
              ]
            }
          }
        },
        "proxy": {
          "$id": "#/properties/proxy",
          "type": "object",
          "title": "The proxy schema",
          "description": "An explanation about the purpose of this instance.",
          "default": {},
          "examples": [
            {
              "url": "",
              "user": "",
              "pass": ""
            }
          ],
          "required": [
          ],
          "properties": {
            "url": {
              "$id": "#/properties/proxy/properties/url",
              "type": "string",
              "title": "The url schema",
              "description": "An explanation about the purpose of this instance.",
              "default": "",
              "examples": [
                ""
              ]
            },
            "user": {
              "$id": "#/properties/proxy/properties/user",
              "type": "string",
              "title": "The user schema",
              "description": "An explanation about the purpose of this instance.",
              "default": "",
              "examples": [
                ""
              ]
            },
            "pass": {
              "$id": "#/properties/proxy/properties/pass",
              "type": "string",
              "title": "The pass schema",
              "description": "An explanation about the purpose of this instance.",
              "default": "",
              "examples": [
                ""
              ]
            }
          }
        },
        "collectorsetServiceNameSuffix": {
          "$comment": "tf:optional",
          "type": "string",
          "default": "",
          "description": "Suffix to be added to .Release.name to generate Collectorset controller service name.\nKeep it empty while installing this chart individually, umbrella chart uses this to generate unique name across"
        },
        "userDefinedSecret": {
          "$id": "#/properties/global/properties/userDefinedSecret",
          "$comment": "tf:optional",
          "type": "string",
          "default": "",
          "description": "User can provide LM credentials in a Secret instead of plain text. The secret should contain 'accessID', 'accessKey', 'account' along with optional params e.g. 'etcdDiscoveryToken', proxy credentials"
        }
      }
    },
    "imagePullSecrets": {
      "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
      "examples": [
        [
          {
            "name": "imagepullsecret1"
          }
        ]
      ],
      "items": {
        "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
      },
      "type": "array"
    },
    "probe": {
      "$id": "#/properties/probe",
      "description": "The container probe configuration schema",
      "type": "object",
      "properties": {
        "enabled": {
          "$id": "#/properties/probe/properties/enabled",
          "type": "boolean",
          "default": true,
          "description": "Enables container probes"
        },
        "grpcContainerProbeEnabled": {
          "$id": "#/properties/probe/properties/grpccontainerprobeenabled",
          "type": "boolean",
          "default": true,
          "description": "Flag to indicate whether \"GRPCContainerProbe\" feature on Kubernetes cluster enabled or not. More details: https://kubernetes.io/blog/2022/05/13/grpc-probes-now-in-beta/"
        },
        "startup": {
          "$id": "#/properties/probe/properties/startup",
          "properties": {
            "failureThreshold": {
              "$id": "#/properties/probe/properties/startup/properties/failureThreshold",
              "type": "integer",
              "description": "The failureThreshold is maximum count before marking container start failed, typically collector installation time affects the argus startup",
              "default": 30,
              "minimum": 1
            },
            "periodSeconds": {
              "$id": "#/properties/probe/properties/startup/properties/periodSeconds",
              "type": "integer",
              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
              "default": 10,
              "minimum": 1
            }
          },
          "additionalProperties": false
        },
        "liveness": {
          "$id": "#/properties/probe/properties/liveness",
          "properties": {
            "failureThreshold": {
              "$id": "#/properties/probe/properties/liveness/properties/failureThreshold",
              "type": "integer",
              "description": "The failureThreshold is maximum count before marking container start failed, typically collector installation time affects the argus startup",
              "default": 3,
              "minimum": 1
            },
            "periodSeconds": {
              "$id": "#/properties/probe/properties/liveness/properties/periodSeconds",
              "type": "integer",
              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
              "default": 10,
              "minimum": 1
            }
          },
          "additionalProperties": false
        },
        "readiness": {
          "$id": "#/properties/probe/properties/readiness",
          "properties": {
            "failureThreshold": {
              "$id": "#/properties/probe/properties/readiness/properties/failureThreshold",
              "type": "integer",
              "description": "The failureThreshold is maximum count before marking container start failed, typically collector installation time affects the argus startup",
              "default": 3,
              "minimum": 1
            },
            "periodSeconds": {
              "$id": "#/properties/probe/properties/readiness/properties/periodSeconds",
              "type": "integer",
              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
              "default": 10,
              "minimum": 1
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "securityContext": {
      "$id": "#/properties/securityContext",
      "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
    },
    "podSecurityContext": {
      "$id": "#/properties/podSecurityContext",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
    },
    "lmutil": {
      "$id": "#/properties/lmutil",
      "additionalProperties": true
    }
  },
  "additionalProperties": false,
  "definitions": {
    "toleration": {
      "oneOf": [
        {
          "properties": {
            "effect": {
              "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
              "type": "string"
            },
            "key": {
              "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
              "type": "string"
            },
            "operator": {
              "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
              "type": "string",
              "enum": [
                "Exists"
              ]
            },
            "tolerationSeconds": {
              "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
              "format": "int64",
              "type": "integer"
            },
            "value": {
              "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
              "type": "string",
              "maxLength": 0
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "effect": {
              "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
              "type": "string"
            },
            "key": {
              "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
              "type": "string"
            },
            "operator": {
              "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
              "type": "string",
              "enum": [
                "Equal"
              ]
            },
            "tolerationSeconds": {
              "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
              "format": "int64",
              "type": "integer"
            },
            "value": {
              "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
              "type": "string",
              "minLength": 1
            }
          },
          "type": "object"
        }
      ]
    },
    "io.k8s.api.core.v1.LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodSecurityContext": {
      "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
      "properties": {
        "fsGroup": {
          "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
          "format": "int64",
          "type": "integer"
        },
        "fsGroupChangePolicy": {
          "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified defaults to \"Always\".",
          "type": "string"
        },
        "runAsGroup": {
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "format": "int64",
          "type": "integer"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "format": "int64",
          "type": "integer"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions",
          "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
        },
        "supplementalGroups": {
          "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        },
        "sysctls": {
          "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Sysctl"
          },
          "type": "array"
        },
        "windowsOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions",
          "description": "The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SELinuxOptions": {
      "description": "SELinuxOptions are the labels to be applied to the container",
      "properties": {
        "level": {
          "description": "Level is SELinux level label that applies to the container.",
          "type": "string"
        },
        "role": {
          "description": "Role is a SELinux role label that applies to the container.",
          "type": "string"
        },
        "type": {
          "description": "Type is a SELinux type label that applies to the container.",
          "type": "string"
        },
        "user": {
          "description": "User is a SELinux user label that applies to the container.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Sysctl": {
      "description": "Sysctl defines a kernel parameter to be set",
      "properties": {
        "name": {
          "description": "Name of a property to set",
          "type": "string"
        },
        "value": {
          "description": "Value of a property to set",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.WindowsSecurityContextOptions": {
      "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials.",
      "properties": {
        "gmsaCredentialSpec": {
          "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          "type": "string"
        },
        "gmsaCredentialSpecName": {
          "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          "type": "string"
        },
        "runAsUserName": {
          "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Capabilities": {
      "description": "Adds and removes POSIX capabilities from running containers.",
      "properties": {
        "add": {
          "description": "Added capabilities",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "drop": {
          "description": "Removed capabilities",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SecurityContext": {
      "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
      "properties": {
        "allowPrivilegeEscalation": {
          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
          "type": "boolean"
        },
        "capabilities": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities",
          "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime."
        },
        "privileged": {
          "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
          "type": "boolean"
        },
        "procMount": {
          "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "description": "Whether this container has a read-only root filesystem. Default is false.",
          "type": "boolean"
        },
        "runAsGroup": {
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "format": "int64",
          "type": "integer"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "format": "int64",
          "type": "integer"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions",
          "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
        },
        "windowsOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions",
          "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        }
      ]
    }
  }
}