apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lmutil.fullname" . }}
  namespace: {{ include "lmutil.release.namespace" . }}
  labels:
    {{ include "argus.labels" . | nindent 4 }}
  annotations:
    {{ include "argus.annotations" . | nindent 4 }}
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{ include "lmutil.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{ include "argus.labels" . | nindent 8 }}
      annotations:
        {{ include "argus.annotations" . | nindent 8 }}
    spec:
      securityContext: {{ include "lmutil.pod-sec-context-nonroot" (list . "lmutil.custom-pod-sec-context-nonroot") | nindent 8 }}
      serviceAccountName: {{ include "lmutil.serviceAccountName" . }}
    {{ if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | nindent 8 }}
    {{ end }}
    {{ if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | nindent 8 }}
    {{ end }}
    {{ if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
    {{ end }}
    {{ with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
    {{ end }}
      containers:
        - name: argus
          securityContext: {{ include "lmutil.container-sec-context-nonroot" (list . "lmutil.custom-container-sec-context-nonroot") | nindent 12 }}
          image: {{ include "argus-image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default (.Values.global.image.pullPolicy | default "Always") }}
          volumeMounts:
            - mountPath: /etc/collector_id
              name: collector-ids
          {{ with .Values.resources }}
          resources:
            {{ toYaml . | nindent 12 }}
          {{ end }}
          args:
            - watch
          {{ if .Values.probe.enabled }}
          startupProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: {{ .Values.probe.startup.failureThreshold }}
            periodSeconds: {{ .Values.probe.startup.periodSeconds }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: {{ .Values.probe.liveness.failureThreshold }}
            periodSeconds: {{ .Values.probe.liveness.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: {{ .Values.probe.readiness.failureThreshold }}
            periodSeconds: {{ .Values.probe.readiness.periodSeconds }}
          {{ end }}
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: APP_KUBERNETES_IO_NAME
              value: {{ template "lmutil.name" . }}
            - name: APP_KUBERNETES_IO_INSTANCE
              value: {{ .Release.Name }}
        {{ include "lm-credentials-and-proxy-details" . | nindent 12 }}
      volumes:
        - name: collector-ids
          configMap:
            name: {{ include "lmutil.fullname" . }}-collector
            optional: true
            items:
              - key: collector-ids.csv
                path: collector-ids.csv