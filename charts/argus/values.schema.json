{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "http://example.com/example.json",
  "type": "object",
  "title": "The root schema",
  "description": "The root schema comprises the entire JSON document.",
  "default": {},
  "examples": [
    {
      "accessID": "",
      "accessKey": "",
      "account": "",
      "clusterName": "",
      "clusterTreeParentID": 1,
      "image": {
        "repository": "logicmonitor/argus",
        "pullPolicy": "",
        "tag": ""
      },
      "nodeSelector": {},
      "affinity": {},
      "priorityClassName": "",
      "tolerations": [],
      "resources": {},
      "labels": {},
      "annotations": {},
      "replicas": 1,
      "resourceContainerID": 1,
      "log": {
        "level": "info"
      },
      "collectorsetcontroller": {
        "address": "collectorset-controller",
        "port": 50000
      },
      "proxy": {
        "url": "",
        "user": "",
        "pass": ""
      },
      "etcdDiscoveryToken": "",
      "ignoreSSL": false,
      "daemons": {
        "lmResourceSweeper": {
          "interval": "PT10M"
        },
        "lmCacheSync": {
          "interval": "PT1H"
        },
        "worker": {
          "poolSize": 10
        },
        "watcher": {
          "bulkSyncInterval": "PT30M",
          "runner": {
            "poolSize": 10,
            "backPressureQueueSizePerRunner": 10
          },
          "sysIpsWaitTimeout": "PT5M"
        }
      },
      "monitoring": {
        "disable": []
      },
      "lm": {
        "lmlogs": {
          "k8sevent": {
            "enable": false
          },
          "k8spodlog": {
            "enable": false
          }
        },
        "resource": {
          "globalDeleteAfterDuration": "P0DT0H0M0S",
          "alerting": {
            "disable": []
          }
        },
        "resourceGroup": {
          "extraProps": {
            "cluster": [],
            "nodes": [],
            "etcd": []
          }
        }
      },
      "filters": [],
      "selfMonitor": {
        "enable": false,
        "port": 2112
      },
      "debug": {
        "profiling": {
          "enable": false
        }
      },
      "collector": {
        "replicas": 1,
        "version": 0,
        "size": "small",
        "useEA": false,
        "lm": {
          "groupID": 0,
          "escalationChainID": 0
        },
        "image": {
          "repository": "logicmonitor/collector",
          "tag": "latest",
          "pullPolicy": ""
        },
        "proxy": {
          "url": "",
          "user": "",
          "pass": ""
        },
        "annotations": {},
        "labels": {},
        "statefulsetSpec": {
          "template": {
            "spec": {
              "nodeSelector": {},
              "tolerations": [],
              "priorityClassName": ""
            }
          }
        }
      },
      "kube-state-metrics": {
        "enabled": true,
        "replicas": 1,
        "collectors": [
          "daemonsets",
          "replicasets",
          "statefulsets",
          "persistentvolumes"
        ]
      },
      "global": {
        "accessID": "",
        "accessKey": "",
        "account": "",
        "proxy": {
          "url": "",
          "user": "",
          "pass": ""
        },
        "image": {
          "pullPolicy": "Always"
        },
        "collectorsetServiceNameSuffix": ""
      },
      "nameOverride": "",
      "fullnameOverride": "",
      "rbac": {
        "create": true
      },
      "serviceAccount": {
        "create": true
      }
    }
  ],
  "required": [
    "accessID",
    "accessKey",
    "account",
    "clusterName",
    "clusterTreeParentID"
  ],
  "properties": {
    "accessID": {
      "$id": "#/properties/accessID",
      "type": "string",
      "title": "Logicmonitor API Token accessID",
      "description": "The LogicMonitor API key ID.\nNOTE: Always add surrounding double quotes to avoid special character parsing errors",
      "default": "",
      "examples": [
        ""
      ]
    },
    "accessKey": {
      "$id": "#/properties/accessKey",
      "type": "string",
      "title": "Logicmonitor API Token accessKey",
      "description": "# The LogicMonitor API key.\nNOTE: Always add surrounding double quotes to avoid special character parsing errors",
      "default": "",
      "examples": [
        ""
      ]
    },
    "account": {
      "$id": "#/properties/account",
      "type": "string",
      "title": "Logicmonitor account name",
      "description": "The LogicMonitor account name.\nValue should be trimmed from URL ___.logicmonitor.com\nexample: say, lmqauat.logicmonitor.com then \"lmqauat\" should be valid here",
      "default": "",
      "examples": [
        "lmqauat"
      ]
    },
    "clusterName": {
      "$id": "#/properties/clusterName",
      "type": "string",
      "title": "Friendly Cluster Name",
      "description": "A unique name given to the cluster's resource group.\nNOTE: do not change name once application deployed in cluster, breaks correlation at multiple places\nexample: Organised Resource group name of kubernetes resource tree generated as \"Kubernetes Cluster: <clusterName>\"",
      "default": "",
      "examples": [
        ""
      ]
    },
    "clusterTreeParentID": {
      "$id": "#/properties/clusterTreeParentID",
      "type": "integer",
      "title": "The clusterTreeParentID",
      "description": "clusterTreeParentID is a parent group ID underneath the organised kubernetes resource tree gets created",
      "default": 1,
      "minimum": 1,
      "examples": [
        1
      ]
    },
    "image": {
      "$id": "#/properties/image",
      "type": "object",
      "title": "The image schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {
          "registry": "382028353997.dkr.ecr.us-west-2.amazonaws.com",
          "repository": "logicmonitor/argus",
          "pullPolicy": "Always",
          "tag": "v6"
        }
      ],
      "required": [],
      "properties": {
        "registry": {
          "$id": "#/properties/image/properties/registry",
          "type": "string",
          "title": "The registry schema",
          "description": "Container Image Registry",
          "default": "",
          "minLength": 0,
          "examples": [
            "382028353997.dkr.ecr.us-west-2.amazonaws.com"
          ]
        },
        "repository": {
          "$id": "#/properties/image/properties/repository",
          "type": "string",
          "title": "The repository schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "logicmonitor/argus",
          "minLength": 1,
          "examples": [
            "logicmonitor/argus"
          ]
        },
        "pullPolicy": {
          "$id": "#/properties/image/properties/pullPolicy",
          "type": "string",
          "title": "pullPolicy",
          "description": "Overrides the image tag whose default is the chart appVersion.",
          "default": "Always",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never",
            ""
          ],
          "examples": [
            "Always"
          ]
        },
        "tag": {
          "$id": "#/properties/image/properties/tag",
          "type": "string",
          "title": "The tag schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "",
          "examples": [
            ""
          ]
        }
      }
    },
    "nodeSelector": {
      "$id": "#/properties/nodeSelector",
      "type": "object",
      "title": "nodeSelector",
      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
      "default": {},
      "examples": [
        {}
      ],
      "required": [],
      "additionalProperties": {
        "type": "string"
      }
    },
    "affinity": {
      "$id": "#/properties/affinity",
      "type": "object",
      "title": "affinity",
      "description": "It allows you to constrain which nodes your pod is eligible to be scheduled on.",
      "default": {},
      "examples": [
        {}
      ],
      "required": []
    },
    "priorityClassName": {
      "$id": "#/properties/priorityClassName",
      "type": "string",
      "title": "priorityClassName",
      "description": "The priority class name for Pod priority. If this parameter is set then user must have PriorityClass resource created otherwise Pod will be rejected.",
      "default": "",
      "examples": [
        ""
      ]
    },
    "tolerations": {
      "$id": "#/properties/tolerations",
      "type": "array",
      "title": "tolerations",
      "description": "tolerations are applied to pods, and allow the pods to schedule onto nodes with matching taints.",
      "default": [],
      "examples": [
        []
      ],
      "additionalItems": true,
      "items": {
        "$id": "#/properties/tolerations/items",
        "$ref": "#/definitions/toleration"
      },
      "uniqueItems": true
    },
    "resources": {
      "$id": "#/properties/resources",
      "type": "object",
      "title": "The resources schema",
      "description": "resources are Pod resource limits",
      "default": {},
      "examples": [
        {
          "limits": {
            "cpu": "1000m",
            "memory": "1Gi",
            "ephemeral-storage": "100Mi"
          },
          "requests": {
            "cpu": "1000m",
            "memory": "1Gi",
            "ephemeral-storage": "100Mi"
          }
        }
      ],
      "properties": {
        "limits": {
          "$id": "#/properties/resources/properties/limits",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "object"
        },
        "requests": {
          "$id": "#/properties/resources/properties/requests",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "object"
        }
      },
      "required": []
    },
    "labels": {
      "$id": "#/properties/labels",
      "type": "object",
      "title": "extraLabels",
      "description": "Labels to apply on all objects created by Argus. Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
      "default": {},
      "examples": [
        {}
      ],
      "required": [],
      "additionalProperties": {
        "type": "string"
      }
    },
    "annotations": {
      "$id": "#/properties/annotations",
      "type": "object",
      "title": "extraAnnotations",
      "description": "Annotations to apply on all objects created by Argus. Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "default": {},
      "examples": [
        {}
      ],
      "required": [],
      "additionalProperties": {
        "type": "string"
      }
    },
    "replicas": {
      "$id": "#/properties/replicas",
      "type": "integer",
      "title": "The replicas schema",
      "description": "Replicas - defaults to 1, param is just for development purpose, do not increase more than one replicas in production",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "examples": [
        1
      ]
    },
    "resourceContainerID": {
      "$id": "#/properties/resourceContainerID",
      "type": "integer",
      "title": "The resourceContainerID schema",
      "description": "A parent group id that will hold all cluster resources under it. This is useful when Argus is installed with non-admin user's token.",
      "default": 1,
      "minimum": 1,
      "examples": [
        1
      ]
    },
    "log": {
      "$id": "#/properties/log",
      "type": "object",
      "title": "Log",
      "description": "Log Configurations",
      "default": {},
      "examples": [
        {
          "level": "info"
        }
      ],
      "required": [
      ],
      "properties": {
        "level": {
          "$id": "#/properties/log/properties/level",
          "type": "string",
          "title": "log.level",
          "description": "Log Level",
          "default": "info",
          "enum": [
            "info",
            "warn",
            "warning",
            "debug",
            "trace",
            "error",
            "fatal",
            "panic"
          ],
          "examples": [
            "info"
          ]
        }
      }
    },
    "collectorsetcontroller": {
      "$id": "#/properties/collectorsetcontroller",
      "type": "object",
      "title": "collectorsetcontroller",
      "description": "Collectorset-Controller Configurations",
      "default": {},
      "examples": [
        {
          "address": "collectorset-controller",
          "port": 50000
        }
      ],
      "required": [
      ],
      "properties": {
        "address": {
          "$id": "#/properties/collectorsetcontroller/properties/address",
          "type": "string",
          "title": "collectorsetController",
          "description": "Collectorset-controller grpc service address",
          "default": "collectorset-controller",
          "minLength": 1,
          "examples": [
            "collectorset-controller"
          ]
        },
        "port": {
          "$id": "#/properties/collectorsetcontroller/properties/port",
          "type": "integer",
          "title": "port",
          "description": "Port service exposes",
          "minimum": 2,
          "default": 50000,
          "examples": [
            50000
          ]
        }
      }
    },
    "proxy": {
      "$id": "#/properties/proxy",
      "type": "object",
      "title": "proxy",
      "description": "Http/s proxy",
      "default": {},
      "examples": [
        {
          "url": "",
          "user": "",
          "pass": ""
        }
      ],
      "required": [
      ],
      "properties": {
        "url": {
          "$id": "#/properties/proxy/properties/url",
          "type": "string",
          "title": "url",
          "description": "Proxy service endpoint",
          "default": "",
          "examples": [
            ""
          ]
        },
        "user": {
          "$id": "#/properties/proxy/properties/user",
          "type": "string",
          "title": "The user schema",
          "description": "Proxy service user",
          "default": "",
          "examples": [
            ""
          ]
        },
        "pass": {
          "$id": "#/properties/proxy/properties/pass",
          "type": "string",
          "title": "pass",
          "description": "Proxy service password",
          "default": "",
          "examples": [
            ""
          ]
        }
      }
    },
    "etcdDiscoveryToken": {
      "$id": "#/properties/etcdDiscoveryToken",
      "type": "string",
      "title": "etcdDiscoveryToken",
      "description": "ETCD discovery token",
      "default": "",
      "examples": [
        ""
      ]
    },
    "ignoreSSL": {
      "$id": "#/properties/ignoreSSL",
      "type": "boolean",
      "title": "ignoreSSL",
      "description": "Set flag to ignore ssl/tls validation",
      "default": false,
      "examples": [
        false
      ]
    },
    "daemons": {
      "$id": "#/properties/daemons",
      "type": "object",
      "title": "daemons",
      "description": "Daemon configurations",
      "default": {},
      "examples": [
        {
          "lmResourceSweeper": {
            "interval": "10m"
          },
          "lmCacheSync": {
            "interval": "1h"
          },
          "worker": {
            "poolSize": 10
          },
          "watcher": {
            "bulkSyncInterval": "30m",
            "runner": {
              "poolSize": 10,
              "backPressureQueueSizePerRunner": 10
            },
            "sysIpsWaitTimeout": "5m"
          }
        }
      ],
      "required": [
      ],
      "properties": {
        "lmResourceSweeper": {
          "$id": "#/properties/daemons/properties/lmResourceSweeper",
          "type": "object",
          "title": "lmResourceSweeper",
          "description": "LM Resource sweeper configurations",
          "default": {},
          "examples": [
            {
              "interval": "10m"
            }
          ],
          "required": [
          ],
          "properties": {
            "interval": {
              "$id": "#/properties/daemons/properties/lmResourceSweeper/properties/interval",
              "type": "string",
              "title": "interval",
              "description": "Execution run interval",
              "default": "10m",
              "examples": [
                "10m"
              ],
              "pattern": "^(\\d+h)?(\\d+m)?(\\d+s)?(\\d+[u]s)?(\\d+ns)?$"
            }
          }
        },
        "lmCacheSync": {
          "$id": "#/properties/daemons/properties/lmCacheSync",
          "type": "object",
          "title": "lmCacheSync",
          "description": "Cache Sync using LM resources configurations",
          "default": {},
          "examples": [
            {
              "interval": "1h"
            }
          ],
          "required": [
          ],
          "properties": {
            "interval": {
              "$id": "#/properties/daemons/properties/lmCacheSync/properties/interval",
              "type": "string",
              "title": "interval",
              "description": "Execution run interval",
              "default": "1h",
              "examples": [
                "1h"
              ],
              "pattern": "^(\\d+h)?(\\d+m)?(\\d+s)?(\\d+[u]s)?(\\d+ns)?$"
            }
          }
        },
        "worker": {
          "$id": "#/properties/daemons/properties/worker",
          "type": "object",
          "title": "worker",
          "description": "Worker configurations",
          "default": {},
          "examples": [
            {
              "poolSize": 10
            }
          ],
          "required": [
          ],
          "properties": {
            "poolSize": {
              "$id": "#/properties/daemons/properties/worker/properties/poolSize",
              "type": "integer",
              "title": "The poolSize schema",
              "description": "number of workers in a pool",
              "default": 10,
              "minimum": 1,
              "examples": [
                10
              ]
            }
          }
        },
        "watcher": {
          "$id": "#/properties/daemons/properties/watcher",
          "type": "object",
          "title": "watcher",
          "description": "Kubernetes watcher configurations",
          "default": {},
          "examples": [
            {
              "bulkSyncInterval": "PT30M",
              "runner": {
                "poolSize": 10,
                "backPressureQueueSizePerRunner": 10
              },
              "sysIpsWaitTimeout": "PT5M"
            }
          ],
          "required": [
          ],
          "properties": {
            "bulkSyncInterval": {
              "$id": "#/properties/daemons/properties/watcher/properties/bulkSyncInterval",
              "type": "string",
              "title": "bulkSyncInterval",
              "description": "Execution run interval",
              "default": "30m",
              "examples": [
                "30m"
              ],
              "pattern": "^(\\d+h)?(\\d+m)?(\\d+s)?(\\d+[u]s)?(\\d+ns)?$"
            },
            "runner": {
              "$id": "#/properties/daemons/properties/watcher/properties/runner",
              "type": "object",
              "title": "The runner schema",
              "description": "configurations for parallel runners to process watcher events",
              "default": {},
              "examples": [
                {
                  "poolSize": 10,
                  "backPressureQueueSizePerRunner": 10
                }
              ],
              "required": [
              ],
              "properties": {
                "poolSize": {
                  "$id": "#/properties/daemons/properties/watcher/properties/runner/properties/poolSize",
                  "type": "integer",
                  "title": "The poolSize schema",
                  "description": "Number of runner in a pool",
                  "default": 10,
                  "minimum": 1,
                  "examples": [
                    10
                  ]
                },
                "backPressureQueueSizePerRunner": {
                  "$id": "#/properties/daemons/properties/watcher/properties/runner/properties/backPressureQueueSizePerRunner",
                  "type": "integer",
                  "title": "The backPressureQueueSizePerRunner schema",
                  "description": "Number of events to queue per runner",
                  "default": 10,
                  "minimum": 1,
                  "examples": [
                    10
                  ]
                }
              }
            },
            "sysIpsWaitTimeout": {
              "$id": "#/properties/daemons/properties/watcher/properties/sysIpsWaitTimeout",
              "type": "string",
              "title": "The sysIpsWaitTimeout schema",
              "description": "in case of IP update, need to wait till Logicmonitor portal copies system.hostname value into system.ips",
              "default": "5m",
              "examples": [
                "5m"
              ],
              "pattern": "^(\\d+h)?(\\d+m)?(\\d+s)?(\\d+[u]s)?(\\d+ns)?$"
            }
          }
        }
      }
    },
    "monitoring": {
      "$id": "#/properties/monitoring",
      "type": "object",
      "title": "The monitoring schema",
      "description": "Monitoring settings",
      "default": {},
      "examples": [
        {
          "disable": []
        }
      ],
      "required": [
      ],
      "properties": {
        "disable": {
          "$id": "#/properties/monitoring/properties/disable",
          "type": "array",
          "title": "The disable schema",
          "description": "Set of resource names to disable monitoring for",
          "default": [],
          "examples": [
            []
          ],
          "additionalItems": true,
          "items": {
            "$id": "#/properties/monitoring/properties/disable/items",
            "type": "string"
          },
          "uniqueItems": true
        }
      }
    },
    "lm": {
      "$id": "#/properties/lm",
      "type": "object",
      "title": "The lm schema",
      "description": "Settings reflect on Logicmonitor Portal",
      "default": {},
      "examples": [
        {
          "lmlogs": {
            "k8sevent": {
              "enable": false
            },
            "k8spodlog": {
              "enable": false
            }
          },
          "resource": {
            "globalDeleteAfterDuration": "P0DT0H0M0S",
            "alerting": {
              "disable": []
            }
          },
          "resourceGroup": {
            "extraProps": {
              "cluster": [],
              "nodes": [],
              "etcd": []
            }
          }
        }
      ],
      "required": [
      ],
      "properties": {
        "lmlogs": {
          "$id": "#/properties/lm/properties/lmlogs",
          "type": "object",
          "title": "The lmlogs schema",
          "description": "Logicmonitor Logs collection settings",
          "default": {},
          "examples": [
            {
              "k8sevent": {
                "enable": false
              },
              "k8spodlog": {
                "enable": false
              }
            }
          ],
          "required": [
          ],
          "properties": {
            "k8sevent": {
              "$id": "#/properties/lm/properties/lmlogs/properties/k8sevent",
              "type": "object",
              "title": "The k8sevent schema",
              "description": "Kubernetes Events collection configurations",
              "default": {},
              "examples": [
                {
                  "enable": false
                }
              ],
              "required": [
              ],
              "properties": {
                "enable": {
                  "$id": "#/properties/lm/properties/lmlogs/properties/k8sevent/properties/enable",
                  "type": "boolean",
                  "title": "The enable schema",
                  "description": "Setting this to true starts kuberentes events collection",
                  "default": false,
                  "examples": [
                    false
                  ]
                }
              }
            },
            "k8spodlog": {
              "$id": "#/properties/lm/properties/lmlogs/properties/k8spodlog",
              "type": "object",
              "title": "The k8spodlog schema",
              "description": "Kubernetes Pod Logs collection configurations",
              "default": {},
              "examples": [
                {
                  "enable": false
                }
              ],
              "required": [
              ],
              "properties": {
                "enable": {
                  "$id": "#/properties/lm/properties/lmlogs/properties/k8spodlog/properties/enable",
                  "type": "boolean",
                  "title": "The enable schema",
                  "description": "Setting this to true starts kuberentes pod's logs collection",
                  "default": false,
                  "examples": [
                    false
                  ]
                }
              }
            }
          }
        },
        "resource": {
          "$id": "#/properties/lm/properties/resource",
          "type": "object",
          "title": "The resource schema",
          "description": "An explanation about the purpose of this instance.",
          "default": {},
          "examples": [
            {
              "globalDeleteAfterDuration": "P0DT0H0M0S",
              "alerting": {
                "disable": []
              }
            }
          ],
          "required": [
          ],
          "properties": {
            "globalDeleteAfterDuration": {
              "$id": "#/properties/lm/properties/resource/properties/globalDeleteAfterDuration",
              "type": "string",
              "title": "The globalDeleteAfterDuration schema",
              "description": "Global scheduled delete duration to delete resources after, values must if in ISO8601 format",
              "default": "P0DT0H0M0S",
              "examples": [
                "P0DT0H0M0S"
              ],
              "pattern": "^P(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
            },
            "alerting": {
              "$id": "#/properties/lm/properties/resource/properties/alerting",
              "type": "object",
              "title": "The alerting schema",
              "description": "Alerting settings to apply on resource groups, only cluster scoped resources are valid here, other gets ignored",
              "default": {},
              "examples": [
                {
                  "disable": []
                }
              ],
              "required": [
              ],
              "properties": {
                "disable": {
                  "$id": "#/properties/lm/properties/resource/properties/alerting/properties/disable",
                  "type": "array",
                  "title": "The disable schema",
                  "description": "Set of resources to disable alerting on",
                  "default": [],
                  "examples": [
                    []
                  ],
                  "additionalItems": true,
                  "items": {
                    "$id": "#/properties/lm/properties/resource/properties/alerting/properties/disable/items",
                    "type": "string"
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        },
        "resourceGroup": {
          "$id": "#/properties/lm/properties/resourceGroup",
          "type": "object",
          "title": "The resourceGroup schema",
          "description": "Resource Group Settings",
          "default": {},
          "examples": [
            {
              "extraProps": {
                "cluster": [],
                "nodes": [],
                "etcd": []
              }
            }
          ],
          "required": [
          ],
          "properties": {
            "extraProps": {
              "$id": "#/properties/lm/properties/resourceGroup/properties/extraProps",
              "type": "object",
              "title": "The extraProps schema",
              "description": "Extra Properties to add upon resource groups, only cluster scoped resources are valid, for rest others use namespace labels",
              "default": {},
              "examples": [
                {
                  "cluster": [],
                  "nodes": [],
                  "etcd": []
                }
              ],
              "required": [
              ],
              "additionalProperties": {
                "$ref": "#/definitions/propoptsarray"
              },
              "properties": {
                "cluster": {
                  "$id": "#/properties/lm/properties/resourceGroup/properties/extraProps/properties/cluster",
                  "type": "array",
                  "title": "The cluster schema",
                  "description": "Properties to apply upon cluster tree root group",
                  "default": [],
                  "examples": [
                    []
                  ],
                  "additionalItems": true,
                  "items": {
                    "$id": "#/properties/lm/properties/resourceGroup/properties/extraProps/properties/cluster/items",
                    "$ref": "#/definitions/propopts"
                  }
                },
                "nodes": {
                  "$id": "#/properties/lm/properties/resourceGroup/properties/extraProps/properties/nodes",
                  "type": "array",
                  "title": "Properties to apply upon node resource group",
                  "description": "",
                  "default": [],
                  "examples": [
                    []
                  ],
                  "additionalItems": true,
                  "items": {
                    "$id": "#/properties/lm/properties/resourceGroup/properties/extraProps/properties/nodes/items",
                    "$ref": "#/definitions/propopts"
                  }
                },
                "etcd": {
                  "$id": "#/properties/lm/properties/resourceGroup/properties/extraProps/properties/etcd",
                  "type": "array",
                  "title": "The etcd schema",
                  "description": "Properties to apply upon etcd resource group",
                  "default": [],
                  "examples": [
                    []
                  ],
                  "additionalItems": true,
                  "items": {
                    "$id": "#/properties/lm/properties/resourceGroup/properties/extraProps/properties/etcd/items",
                    "$ref": "#/definitions/propopts"
                  }
                }
              }
            }
          }
        }
      }
    },
    "filters": {
      "$id": "#/properties/filters",
      "type": "array",
      "title": "The filters schema",
      "description": "Set of filter rules to exclude from adding into Logimonitor",
      "default": [],
      "examples": [
        [
          "'!(type in (\"po\", (\"deploy\"), \"ep\"))'"
        ],
        [
          "'type == \"pod\" && [app.kubernetes.io/instance] != \"lm-container\""
        ]
      ],
      "additionalItems": true,
      "items": {
        "$id": "#/properties/filters/items",
        "type": "string"
      },
      "uniqueItems": true
    },
    "selfMonitor": {
      "$id": "#/properties/selfMonitor",
      "type": "object",
      "title": "The selfMonitor schema",
      "description": "Configurations to expose self monitor metrics in Openmetrics format",
      "default": {},
      "examples": [
        {
          "enable": false,
          "port": 2112
        }
      ],
      "required": [
      ],
      "properties": {
        "enable": {
          "$id": "#/properties/selfMonitor/properties/enable",
          "type": "boolean",
          "title": "The enable schema",
          "description": "Setting this to true starts exposing self monitor metrics",
          "default": false,
          "examples": [
            false
          ]
        },
        "port": {
          "$id": "#/properties/selfMonitor/properties/port",
          "type": "integer",
          "title": "The port schema",
          "description": "port number to expose self monitor \"/metrics\" endpoint",
          "default": 2112,
          "minimum": 2,
          "examples": [
            2112
          ]
        }
      }
    },
    "debug": {
      "$id": "#/properties/debug",
      "type": "object",
      "title": "The debug schema",
      "description": "Application debug configurations",
      "default": {},
      "examples": [
        {
          "profiling": {
            "enable": false
          }
        }
      ],
      "required": [
      ],
      "properties": {
        "profiling": {
          "$id": "#/properties/debug/properties/profiling",
          "type": "object",
          "title": "The profiling schema",
          "description": "Profile generation configurations",
          "default": {},
          "examples": [
            {
              "enable": false
            }
          ],
          "required": [
          ],
          "properties": {
            "enable": {
              "$id": "#/properties/debug/properties/profiling/properties/enable",
              "type": "boolean",
              "title": "The enable schema",
              "description": "Setting this to true start application profile generations",
              "default": false,
              "examples": [
                false
              ]
            }
          }
        }
      }
    },
    "collector": {
      "$id": "#/properties/collector",
      "type": "object",
      "title": "The collector schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {
          "replicas": 1,
          "version": 0,
          "size": "small",
          "useEA": false,
          "lm": {
            "groupID": 0,
            "escalationChainID": 0
          },
          "image": {
            "repository": "logicmonitor/collector",
            "tag": "latest",
            "pullPolicy": ""
          },
          "proxy": {
            "url": "",
            "user": "",
            "pass": ""
          },
          "annotations": {},
          "labels": {},
          "statefulsetSpec": {
            "template": {
              "spec": {
                "nodeSelector": {},
                "tolerations": [],
                "priorityClassName": ""
              }
            }
          }
        }
      ],
      "required": [
      ],
      "properties": {
        "replicas": {
          "$id": "#/properties/collector/properties/replicas",
          "type": "integer",
          "title": "The replicas schema",
          "description": "An explanation about the purpose of this instance.",
          "default": 1,
          "minimum": 1,
          "examples": [
            1
          ]
        },
        "version": {
          "$id": "#/properties/collector/properties/version",
          "type": "integer",
          "format": "",
          "title": "The version schema",
          "description": "An explanation about the purpose of this instance.",
          "examples": [
            20101
          ]
        },
        "size": {
          "$id": "#/properties/collector/properties/size",
          "type": "string",
          "title": "The size schema",
          "description": "An explanation about the purpose of this instance.",
          "default": "",
          "enum": [
            "nano",
            "small",
            "medium",
            "large",
            "extra_large",
            "double_extra_large"
          ],
          "examples": [
            "small"
          ]
        },
        "useEA": {
          "$id": "#/properties/collector/properties/useEA",
          "type": "boolean",
          "title": "The useEA schema",
          "description": "An explanation about the purpose of this instance.",
          "default": false,
          "examples": [
            false
          ]
        },
        "lm": {
          "$id": "#/properties/collector/properties/lm",
          "type": "object",
          "title": "The lm schema",
          "description": "An explanation about the purpose of this instance.",
          "default": {},
          "examples": [
            {
              "groupID": 0,
              "escalationChainID": 0
            }
          ],
          "required": [
          ],
          "properties": {
            "groupID": {
              "$id": "#/properties/collector/properties/lm/properties/groupID",
              "type": "integer",
              "title": "The groupID schema",
              "description": "An explanation about the purpose of this instance.",
              "default": 1,
              "examples": [
                1
              ]
            },
            "escalationChainID": {
              "$id": "#/properties/collector/properties/lm/properties/escalationChainID",
              "type": "integer",
              "title": "The escalationChainID schema",
              "description": "An explanation about the purpose of this instance.",
              "examples": [
                1
              ]
            }
          }
        },
        "image": {
          "$id": "#/properties/collector/properties/image",
          "type": "object",
          "title": "The image schema",
          "description": "An explanation about the purpose of this instance.",
          "default": {},
          "examples": [
            {
              "registry": "",
              "repository": "logicmonitor/collector",
              "tag": "latest",
              "pullPolicy": ""
            }
          ],
          "required": [
          ],
          "properties": {
            "registry": {
              "$id": "#/properties/collector/properties/image/properties/registry",
              "type": "string",
              "title": "The registry schema",
              "description": "Container Image Registry",
              "default": "",
              "minLength": 0,
              "examples": [
                "382028353997.dkr.ecr.us-west-2.amazonaws.com"
              ]
            },
            "repository": {
              "$id": "#/properties/collector/properties/image/properties/repository",
              "type": "string",
              "title": "The repository schema",
              "description": "An explanation about the purpose of this instance.",
              "default": "",
              "examples": [
                "logicmonitor/collector"
              ]
            },
            "tag": {
              "$id": "#/properties/collector/properties/image/properties/tag",
              "type": "string",
              "title": "The tag schema",
              "description": "An explanation about the purpose of this instance.",
              "default": "",
              "examples": [
                "latest"
              ]
            },
            "pullPolicy": {
              "$id": "#/properties/collector/properties/image/properties/pullPolicy",
              "type": "string",
              "title": "The pullPolicy schema",
              "description": "An explanation about the purpose of this instance.",
              "default": "",
              "enum": [
                "Always",
                "IfNotPresent",
                "Never",
                ""
              ],
              "examples": [
                ""
              ]
            }
          }
        },
        "proxy": {
          "$id": "#/properties/collector/properties/proxy",
          "type": "object",
          "title": "The proxy schema",
          "description": "An explanation about the purpose of this instance.",
          "default": {},
          "examples": [
            {
              "url": "",
              "user": "",
              "pass": ""
            }
          ],
          "required": [
          ],
          "properties": {
            "url": {
              "$id": "#/properties/collector/properties/proxy/properties/url",
              "type": "string",
              "title": "The url schema",
              "description": "An explanation about the purpose of this instance.",
              "default": "",
              "examples": [
                ""
              ]
            },
            "user": {
              "$id": "#/properties/collector/properties/proxy/properties/user",
              "type": "string",
              "title": "The user schema",
              "description": "An explanation about the purpose of this instance.",
              "default": "",
              "examples": [
                ""
              ]
            },
            "pass": {
              "$id": "#/properties/collector/properties/proxy/properties/pass",
              "type": "string",
              "title": "The pass schema",
              "description": "An explanation about the purpose of this instance.",
              "default": "",
              "examples": [
                ""
              ]
            }
          }
        },
        "annotations": {
          "$id": "#/properties/collector/properties/annotations",
          "type": "object",
          "title": "The annotations schema",
          "description": "An explanation about the purpose of this instance.",
          "default": {},
          "examples": [
            {}
          ],
          "required": []
        },
        "labels": {
          "$id": "#/properties/collector/properties/labels",
          "type": "object",
          "title": "The labels schema",
          "description": "An explanation about the purpose of this instance.",
          "default": {},
          "examples": [
            {}
          ],
          "required": []
        },
        "statefulsetSpec": {
          "$id": "#/properties/collector/properties/statefulsetspec",
          "description": "The collector StatefulSet specification for customizations",
          "properties": {
            "template": {
              "$id": "#/properties/collector/properties/statefulsetspec/properties/template",
              "properties": {
                "spec": {
                  "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec",
                  "properties": {
                    "containers": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/containers",
                      "items": {
                        "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/containers/items",
                        "description": "A single application container that you want to run within a pod.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "resources": {
                            "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "properties": {
                              "limits": {
                                "additionalProperties": {
                                  "x-kubernetes-int-or-string": true
                                },
                                "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                                "type": "object"
                              },
                              "requests": {
                                "additionalProperties": {
                                  "x-kubernetes-int-or-string": true
                                },
                                "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "dnsConfig": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/dnsConfig",
                      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
                      "properties": {
                        "nameservers": {
                          "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/containers/properties/nameservers",
                          "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "options": {
                          "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/containers/properties/options",
                          "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
                          "items": {
                            "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/containers/properties/options/items",
                            "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                            "properties": {
                              "name": {
                                "description": "Required.",
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "searches": {
                          "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/containers/properties/searches",
                          "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "dnsPolicy": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/dnsPolicy",
                      "description": "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
                      "type": "string"
                    },
                    "hostAliases": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/hostAliases",
                      "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.",
                      "items": {
                        "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
                        "properties": {
                          "hostnames": {
                            "description": "Hostnames for the above IP address.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "ip": {
                            "description": "IP address of the host file entry.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "nodeName": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/nodename",
                      "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                      "type": "string"
                    },
                    "nodeSelector": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/nodeselector",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                      "type": "object"
                    },
                    "priority": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/priority",
                      "description": "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "priorityClassName": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/priorityclassname",
                      "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                      "type": "string"
                    },
                    "restartPolicy": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/restartpolicy",
                      "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
                      "type": "string"
                    },
                    "schedulerName": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/schedulername",
                      "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.",
                      "type": "string"
                    },
                    "tolerations": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/tolerations",
                      "items": {
                        "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/tolerations/items",
                        "$ref": "#/definitions/toleration"
                      },
                      "uniqueItems": true,
                      "type": "array"
                    },
                    "volumes": {
                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes",
                      "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
                      "items": {
                        "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items",
                        "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                        "properties": {
                          "awsElasticBlockStore": {
                            "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/awselasticblockstore",
                            "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
                            "properties": {
                              "fsType": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/awselasticblockstore/properties/fstype",
                                "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                "type": "string"
                              },
                              "partition": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/awselasticblockstore/properties/partition",
                                "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                "format": "int32",
                                "type": "integer"
                              },
                              "readOnly": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/awselasticblockstore/properties/readonly",
                                "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                "type": "boolean"
                              },
                              "volumeID": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/awselasticblockstore/properties/volumeid",
                                "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                "type": "string"
                              }
                            },
                            "required": [
                              "volumeID"
                            ],
                            "type": "object"
                          },
                          "azureDisk": {
                            "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/azuredisk",
                            "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                            "properties": {
                              "cachingMode": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/azuredisk/properties/cachingmode",
                                "description": "Host Caching mode: None, Read Only, Read Write.",
                                "type": "string"
                              },
                              "diskName": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/azuredisk/properties/diskname",
                                "description": "The Name of the data disk in the blob storage",
                                "type": "string"
                              },
                              "diskURI": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/azuredisk/properties/diskuri",
                                "description": "The URI the data disk in the blob storage",
                                "type": "string"
                              },
                              "fsType": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/azuredisk/properties/fstype",
                                "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                "type": "string"
                              },
                              "kind": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/azuredisk/properties/kind",
                                "description": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                                "type": "string"
                              },
                              "readOnly": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/azuredisk/properties/readonly",
                                "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "diskName",
                              "diskURI"
                            ],
                            "type": "object"
                          },
                          "configMap": {
                            "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/configmap",
                            "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
                            "properties": {
                              "defaultMode": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/defaultmode",
                                "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "items": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/items",
                                "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                "items": {
                                  "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/configmap/items/items",
                                  "description": "Maps a string key to a path within a volume.",
                                  "properties": {
                                    "key": {
                                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/configmap/items/items/properties/key",
                                      "description": "The key to project.",
                                      "type": "string"
                                    },
                                    "mode": {
                                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/configmap/items/items/properties/mode",
                                      "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "path": {
                                      "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/configmap/items/items/properties/path",
                                      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "path"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "name": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/name",
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/optional",
                                "description": "Specify whether the ConfigMap or it's keys must be defined",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "emptyDir": {
                            "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/emptydir",
                            "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
                            "properties": {
                              "medium": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/emptydir/properties/medium",
                                "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                "type": "string"
                              },
                              "sizeLimit": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/emptydir/properties/sizelimit",
                                "description": "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/user-guide/volumes#emptydir",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "type": "object"
                          },
                          "hostPath": {
                            "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/hostpath",
                            "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
                            "properties": {
                              "path": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/hostpath/properties/path",
                                "description": "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                "type": "string"
                              },
                              "type": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/hostpath/properties/type",
                                "description": "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                "type": "string"
                              }
                            },
                            "required": [
                              "path"
                            ],
                            "type": "object"
                          },
                          "name": {
                            "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/name",
                            "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "persistentVolumeClaim": {
                            "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/persistentvolumeclaim",
                            "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
                            "properties": {
                              "claimName": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/persistentvolumeclaim/properties/claimname",
                                "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                "type": "string"
                              },
                              "readOnly": {
                                "$id": "#/properties/collector/properties/statefulsetspec/properties/template/properties/spec/properties/volumes/items/properties/persistentvolumeclaim/properties/readonly",
                                "description": "Will force the ReadOnly setting in VolumeMounts. Default false.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "claimName"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        }
      }
    },
    "kube-state-metrics": {
      "$id": "#/properties/kube-state-metrics",
      "type": "object",
      "title": "The kube-state-metrics schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {
          "enabled": true,
          "replicas": 1,
          "collectors": [
            "daemonsets",
            "replicasets",
            "statefulsets",
            "persistentvolumes"
          ]
        }
      ],
      "required": [
      ],
      "properties": {
        "enabled": {
          "$id": "#/properties/kube-state-metrics/properties/enabled",
          "type": "boolean",
          "title": "The enabled schema",
          "description": "An explanation about the purpose of this instance.",
          "default": false,
          "examples": [
            true
          ]
        },
        "replicas": {
          "$id": "#/properties/kube-state-metrics/properties/replicas",
          "type": "integer",
          "title": "The replicas schema",
          "description": "An explanation about the purpose of this instance.",
          "default": 1,
          "minimum": 0,
          "examples": [
            1
          ]
        },
        "collectors": {
          "$id": "#/properties/kube-state-metrics/properties/collectors",
          "type": "array",
          "title": "The collectors schema",
          "description": "An explanation about the purpose of this instance.",
          "default": [],
          "examples": [
            [
              "daemonsets",
              "replicasets"
            ]
          ],
          "additionalItems": true,
          "uniqueItems": true,
          "items": {
            "$id": "#/properties/kube-state-metrics/properties/collectors/items",
            "anyOf": [
              {
                "$id": "#/properties/kube-state-metrics/properties/collectors/items/anyOf/0",
                "type": "string",
                "title": "The first anyOf schema",
                "description": "An explanation about the purpose of this instance.",
                "default": "",
                "examples": [
                  "daemonsets",
                  "replicasets"
                ]
              }
            ]
          }
        }
      }
    },
    "global": {
      "$id": "#/properties/global",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "imagePullSecrets": {
          "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
          "examples": [
            [
              {
                "name": "imagepullsecret1"
              }
            ]
          ],
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "type": "array"
        },
        "image": {
          "$id": "#/properties/global/properties/image",
          "type": "object",
          "title": "The image schema",
          "description": "An explanation about the purpose of this instance.",
          "default": {},
          "examples": [
            {
              "pullPolicy": "Always"
            }
          ],
          "required": [],
          "properties": {
            "registry": {
              "$id": "#/properties/global/properties/image/properties/registry",
              "type": "string",
              "title": "The registry schema",
              "description": "Container Image Registry",
              "default": "",
              "minLength": 0,
              "examples": [
                "382028353997.dkr.ecr.us-west-2.amazonaws.com"
              ]
            },
            "pullPolicy": {
              "$id": "#/properties/global/properties/image/properties/pullpolicy",
              "type": "string",
              "title": "pullPolicy",
              "description": "Overrides the image tag whose default is the chart appVersion.",
              "default": "Always",
              "enum": [
                "Always",
                "IfNotPresent",
                "Never",
                ""
              ],
              "examples": [
                "Always"
              ]
            }
          }
        },
        "proxy": {
          "$id": "#/properties/proxy",
          "type": "object",
          "title": "proxy",
          "description": "Http/s proxy",
          "default": {},
          "examples": [
            {
              "url": "",
              "user": "",
              "pass": ""
            }
          ],
          "required": [
          ],
          "properties": {
            "url": {
              "$id": "#/properties/proxy/properties/url",
              "type": "string",
              "title": "url",
              "description": "Proxy service endpoint",
              "default": "",
              "examples": [
                ""
              ]
            },
            "user": {
              "$id": "#/properties/proxy/properties/user",
              "type": "string",
              "title": "The user schema",
              "description": "Proxy service user",
              "default": "",
              "examples": [
                ""
              ]
            },
            "pass": {
              "$id": "#/properties/proxy/properties/pass",
              "type": "string",
              "title": "pass",
              "description": "Proxy service password",
              "default": "",
              "examples": [
                ""
              ]
            }
          }
        },
        "collectorsetServiceNameSuffix": {
          "type": "string",
          "default": "",
          "description": "Suffix to be added to .Release.name to generate Collectorset controller service URL.\nKeep it empty while installing this chart individually, umbrella chart uses this to generate unique name across"
        }
      }
    },
    "nameOverride": {
      "$id": "#/properties/nameOverride",
      "type": "string",
      "title": "The nameOverride schema",
      "description": "An explanation about the purpose of this instance.",
      "default": "",
      "examples": [
        ""
      ]
    },
    "fullnameOverride": {
      "$id": "#/properties/fullnameOverride",
      "type": "string",
      "title": "The fullnameOverride schema",
      "description": "An explanation about the purpose of this instance.",
      "default": "",
      "examples": [
        ""
      ]
    },
    "rbac": {
      "$id": "#/properties/rbac",
      "type": "object",
      "title": "The rbac schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {
          "create": true
        }
      ],
      "required": [
      ],
      "properties": {
        "create": {
          "$id": "#/properties/rbac/properties/create",
          "type": "boolean",
          "title": "The create schema",
          "description": "An explanation about the purpose of this instance.",
          "default": false,
          "examples": [
            true
          ]
        }
      }
    },
    "serviceAccount": {
      "$id": "#/properties/serviceAccount",
      "type": "object",
      "title": "The serviceAccount schema",
      "description": "An explanation about the purpose of this instance.",
      "default": {},
      "examples": [
        {
          "create": true
        }
      ],
      "required": [
      ],
      "properties": {
        "create": {
          "$id": "#/properties/serviceAccount/properties/create",
          "type": "boolean",
          "title": "The create schema",
          "description": "An explanation about the purpose of this instance.",
          "default": false,
          "examples": [
            true
          ]
        }
      }
    },
    "imagePullSecrets": {
      "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
      "items": {
        "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
      },
      "type": "array",
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "toleration": {
      "oneOf": [
        {
          "properties": {
            "effect": {
              "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
              "type": "string"
            },
            "key": {
              "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
              "type": "string"
            },
            "operator": {
              "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
              "type": "string",
              "enum": [
                "Exists"
              ]
            },
            "tolerationSeconds": {
              "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
              "format": "int64",
              "type": "integer"
            },
            "value": {
              "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
              "type": "string",
              "maxLength": 0
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "effect": {
              "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
              "type": "string"
            },
            "key": {
              "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
              "type": "string"
            },
            "operator": {
              "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
              "type": "string",
              "enum": [
                "Equal"
              ]
            },
            "tolerationSeconds": {
              "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
              "format": "int64",
              "type": "integer"
            },
            "value": {
              "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
              "type": "string",
              "minLength": 1
            }
          },
          "type": "object"
        }
      ]
    },
    "propopts": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "value": {
          "type": "string",
          "minLength": 0
        },
        "override": {
          "type": "boolean",
          "default": true
        }
      }
    },
    "propoptsarray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/propopts"
      },
      "uniqueItems": true
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        }
      ]
    },
    "io.k8s.api.core.v1.LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}