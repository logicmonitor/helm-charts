{
  "type": "object",
  "description": "Argus helm chart configuration",
  "required": [
    "accessID",
    "accessKey",
    "account",
    "clusterName",
    "collector"
  ],
  "properties": {
    "accessID": {
      "description": "Logicmonitor API Token accessID",
      "type": "string"
    },
    "accessKey": {
      "description": "Logicmonitor API Token accessKey",
      "type": "string"
    },
    "account": {
      "description": "Logicmonitor account name (trimmed: ___.logicmonitor.com)",
      "type": "string"
    },
    "clusterName": {
      "type": "string"
    },
    "rbac": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        }
      },
      "required": [
        "create"
      ]
    },
    "logLevel": {
      "type": "string"
    },
    "clusterGroupID": {
      "type": "integer"
    },
    "resourceGroupID": {
      "type": "integer"
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string"
        },
        "pullPolicy": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ]
    },
    "proxy": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "pass": {
          "type": "string"
        }
      },
      "required": [
        "url",
        "user",
        "pass"
      ]
    },
    "etcdDiscoveryToken": {
      "type": "string"
    },
    "nodeSelector": {
      "type": "object"
    },
    "affinity": {
      "type": "object"
    },
    "priorityClassName": {
      "type": "string"
    },
    "tolerations": {
      "type": "array",
      "items": {}
    },
    "labels": {
      "type": "object"
    },
    "annotations": {
      "type": "object"
    },
    "ignoreSSL": {
      "type": "boolean"
    },
    "daemons": {
      "type": "object",
      "properties": {
        "k8sBulkSync": {
          "type": "object",
          "properties": {
            "interval": {
              "type": "string"
            }
          },
          "required": [
            "interval"
          ]
        },
        "LMResourceSweeper": {
          "type": "object",
          "properties": {
            "interval": {
              "type": "string"
            }
          },
          "required": [
            "interval"
          ]
        },
        "LMCacheSync": {
          "type": "object",
          "properties": {
            "interval": {
              "type": "string"
            }
          },
          "required": [
            "interval"
          ]
        }
      },
      "required": [
        "k8sBulkSync",
        "LMResourceSweeper",
        "LMCacheSync"
      ]
    },
    "lmlogs": {
      "type": "object",
      "properties": {
        "k8sevent.enable": {
          "type": "boolean"
        },
        "k8spodlog.enable": {
          "type": "boolean"
        }
      },
      "required": [
        "k8sevent.enable",
        "k8spodlog.enable"
      ]
    },
    "lm": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "properties": {
            "scheduledDelete": {
              "type": "string"
            },
            "monitoring": {
              "type": "object",
              "properties": {
                "disable": {
                  "type": "array",
                  "items": {}
                }
              },
              "required": [
                "disable"
              ]
            },
            "alerting": {
              "type": "object",
              "properties": {
                "disable": {
                  "type": "array",
                  "items": {}
                }
              },
              "required": [
                "disable"
              ]
            }
          },
          "required": [
            "scheduledDelete",
            "monitoring",
            "alerting"
          ]
        },
        "resourceGroup": {
          "type": "object",
          "properties": {
            "clusterTreeParentID": {
              "type": "integer"
            },
            "resourceContainerID": {
              "type": "integer"
            },
            "extraProps": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "array",
                  "items": {}
                },
                "nodes": {
                  "type": "array",
                  "items": {}
                },
                "etcd": {
                  "type": "array",
                  "items": {}
                }
              },
              "required": [
                "cluster",
                "nodes",
                "etcd"
              ]
            }
          },
          "required": [
            "extraProps"
          ]
        }
      },
      "required": [
        "resource",
        "resourceGroup"
      ]
    },
    "filters": {
      "type": "array",
      "items": {}
    },
    "openmetrics": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer"
        }
      },
      "required": [
        "port"
      ]
    },
    "collector": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer"
        },
        "version": {
          "type": "integer"
        },
        "size": {
          "type": "string",
          "enum": [
            "nano",
            "small",
            "medium",
            "large",
            "extra_large",
            "double_extra_large"
          ]
        },
        "useEA": {
          "type": "boolean"
        },
        "lm": {
          "type": "object",
          "properties": {
            "groupID": {
              "type": "integer"
            },
            "escalationChainID": {
              "type": "integer"
            }
          }
        },
        "image": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            },
            "pullPolicy": {
              "type": "string"
            }
          }
        },
        "proxy": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "user": {
              "type": "string"
            },
            "pass": {
              "type": "string"
            }
          }
        },
        "annotations": {
          "type": "object"
        },
        "labels": {
          "type": "object"
        },
        "statefulsetspec": {
          "type": "object",
          "properties": {
            "template": {
              "type": "object",
              "properties": {
                "spec": {
                  "type": "object",
                  "properties": {
                    "nodeSelector": {
                      "type": "object"
                    },
                    "tolerations": {
                      "type": "array",
                      "items": {}
                    },
                    "priorityClassName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "nodeSelector",
                    "tolerations",
                    "priorityClassName"
                  ]
                }
              },
              "required": [
                "spec"
              ]
            }
          },
          "required": [
            "template"
          ]
        }
      },
      "required": [
        "size"
      ]
    },
    "replicas": {
      "type": "integer"
    },
    "kube-state-metrics": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "replicas": {
          "type": "integer"
        },
        "collectors": {
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "string"
            },
            {
              "type": "string"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "enabled",
        "replicas",
        "collectors"
      ]
    }
  }
}